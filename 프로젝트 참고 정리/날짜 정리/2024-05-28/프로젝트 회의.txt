1. 제출할 때 프로젝트 제안서로 작성.
2. 제안서에서 기능을 어떻게 구현을 할 것인가 방법에 대해 구체적으로 서술.
3. 기능 구현할 때 역할 분담을 구체적으로.

작업 관련.
1. 리액트에 부트스트랩 설치 완료.
2. 상품 추가, 상품 삭제, 상품 보기, 상품 등록 기능 완료(수락 완료).
3. 우선은 디테일 보다는 기능 구현을 중점에 두고 큰 틀에서 작동만 하는지 확인. 나중에 합칠 때 디테일하게 따지기.

추가 작업.

- 현재는 초반이니까 기본은 모든 기능을 간단하게 큰 틀에서 구현하는 쪽으로 간다.

1. 장바구니 기능. 추가 및 삭제. 상품이랑 연결. 이때 고유 ID 값을 받아와야 한다.
고유 ID가 있어야 거기에서 상품의 정보를 빼올 수 있다.
2. 수정 및 디테일 관련해서 해당 버튼 클릭하면 주소에서 api/products/edit/{id} 이런 식으로 나오게 하고 페이지 이동해서 작업할 수 있도록 수정해보기.


장바구니 추가 작업.

1. 상품을 장바구니에 담을 때 상품의 객체를 담는다는 느낌으로 해야 한다. 그래야 상품의 정보가 변경이 됐을 때 
그게 바로 장바구니에 반영이 된다. 상품의 정보가 변경이 되면 장바구니에 있는 상품의 정보도 변경이 돼야 한다.


1. 상품 이름으로 값을 받는다. 이름이 중복이면 중복이라고 알려주고, 각 상품의 세부 정보를 주고
어떤 게 맞는지 선택하게? 아니면 아예 상품에 중복이 생기는 경우가 없도록 설정?

2. 상품의 개별 가격과 총 가격을 표시. 여기서 총 가격은 각 상품 마다의 총 가격과 모든 상품의 총 가격.

3. 장바구니에 담긴 상품을 삭제하려고 하면 어떻게 일을 처리하지?


장바구니 추가 작업.
장바구니에서 상품 추가는 이름으로 입력하는 것에서 다른 방식으로 변경.
해당 상품 옆에 따로 장바구니에 추가 버튼을 놓고, 버튼을 클릭하면 자동으로 회원의
장바구니에 해당 상품이 추가 되는 걸로 바꾸기.

레퍼지토리에 findbyname으로 한 부분은 필요가 없을 것 같다.
해당 버튼은 상품의 고유 ID와 연결이 된다.
상품 이름을 값으로 받아오던 걸 수정해서 상품의 ID를 받아오는 걸로 바꾸자.

버튼은 2개를 사용한다.
상품을 나열하는 상품 목록에서 장바구니 추가 버튼 1.
개별 상품에서 장바구니 추가 버튼 1.